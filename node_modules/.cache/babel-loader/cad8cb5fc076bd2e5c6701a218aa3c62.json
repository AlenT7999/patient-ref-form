{"ast":null,"code":"var _jsxFileName = \"/home/lenovo/Documents/interview/git gogo/git gogo2/patient-ref-form/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport { Alert, Button, Grid, InputAdornment, Snackbar, TextField } from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { AccountCircle, Add, CakeOutlined, Email, Phone, TranslateOutlined } from \"@mui/icons-material\";\nimport * as yup from \"yup\";\nimport API from \"../utils/axios\";\nimport PlacesAutocomplete from \"react-places-autocomplete\";\nimport { geocodeByAddress, geocodeByPlaceId, getLatLng } from \"react-places-autocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  textFiedStyle: {\n    marginTop: \"15px\"\n  }\n};\nexport default function Form() {\n  _s();\n\n  const colors = [\"#25A575\", \"#25A575\", \"#2595A5\", \"#3A719B\", \"#142B58\"];\n  const validationSchema = yup.object({\n    firstName: yup.string().required(\"first name is required\"),\n    lastName: yup.string().required(\"last name is required\"),\n    dob: yup.string().required(\"date of birth is required\"),\n    language: yup.string().required(\"contact language is required\"),\n    phone: yup.number().moreThan(999999999, \"10 digits required\").typeError(\"numbers are allowed\").required(\"Mobile is required\"),\n    email: yup.string().email(\"Enter a valid email\").required(\"email is required\"),\n    address: yup.string().max(100).required(\"address is required\"),\n    notes: yup.string().max(100)\n  });\n  const [referrals, setReferrals] = useState([]);\n  const [type, setType] = useState(\"text\");\n  const [open, setOpen] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [alertColor, setAlertColor] = useState(\"success\");\n  const [address, setAddress] = useState(\"\");\n  const initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    dob: \"\",\n    language: \"\",\n    phone: \"\",\n    email: \"\",\n    address: address,\n    notes: \"\"\n  };\n\n  const sendReferrals = () => {\n    if (referrals && referrals.length !== 0) {\n      API.post(`/patient`, referrals).then(response => {\n        const {\n          status,\n          message\n        } = response.data;\n\n        if (status) {\n          setAlertColor(\"success\");\n          setMessage(`Success! You have submitted ${referrals.length} pending requests. You will be notified once they've been approved`);\n          setOpen(true);\n        } else {\n          setMessage(message);\n          setAlertColor(\"error\");\n          setOpen(true);\n        }\n      }).catch(error => {\n        setMessage(error.message);\n        setAlertColor(\"error\");\n        setOpen(true);\n      });\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChanger = address => {\n    setAddress(address);\n  };\n\n  const handleSelect = address => {\n    setAddress(address);\n    initialValues.address = address;\n    geocodeByAddress(address).then(results => getLatLng(results[0])).then(latLng => console.log(\"Success\", latLng)).catch(error => console.error(\"Error\", error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [referrals && referrals.map((row, i) => {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          style: {\n            backgroundColor: \"white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                style: {\n                  height: \"5vh\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 1,\n                  style: {\n                    backgroundColor: colors[i],\n                    paddingTop: \"10px\"\n                  },\n                  children: i + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 11,\n                  align: \"left\",\n                  style: {\n                    paddingTop: \"10px\",\n                    paddingLeft: \"5px\"\n                  },\n                  children: row.firstName + \"\" + row.lastName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: (values, actions) => {\n        setReferrals(oldData => [...oldData, values]);\n        actions.resetForm({\n          firstName: \"\",\n          lastName: \"\",\n          dob: \"\",\n          language: \"\",\n          phone: \"\",\n          email: \"\",\n          address: \"\",\n          notes: \"\"\n        }); // setAddress(null);\n        // console.log('works');\n      },\n      children: _ref => {\n        let {\n          errors,\n          handleChange,\n          handleSubmit,\n          values,\n          touched\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          onSubmit: handleSubmit,\n          style: {\n            marginTop: \"20px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            style: {\n              backgroundColor: \"white\",\n              paddingBottom: \"20px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  style: {\n                    height: \"5vh\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 1,\n                    style: {\n                      backgroundColor: colors[referrals.length + 1],\n                      paddingTop: \"10px\"\n                    },\n                    children: referrals.length + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 11,\n                    align: \"left\",\n                    style: {\n                      paddingTop: \"10px\",\n                      paddingLeft: \"5px\"\n                    },\n                    children: \"New Referral\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              item: true,\n              style: {\n                marginLeft: \"20px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 5,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  style: style.textFiedStyle,\n                  fullWidth: true,\n                  required: true,\n                  placeholder: \"First Name *\",\n                  id: \"outlined-required\",\n                  variant: \"standard\",\n                  name: \"firstName\",\n                  helperText: touched.firstName && errors.firstName,\n                  error: touched.firstName && !!errors.firstName,\n                  onChange: handleChange,\n                  value: values.firstName,\n                  InputProps: {\n                    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"start\",\n                      children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 213,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 25\n                    }, this)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 5,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  style: style.textFiedStyle,\n                  fullWidth: true,\n                  required: true,\n                  placeholder: \"Last Name *\",\n                  id: \"outlined-required\",\n                  variant: \"standard\",\n                  name: \"lastName\",\n                  helperText: touched.lastName && errors.lastName,\n                  error: touched.lastName && !!errors.lastName,\n                  onChange: handleChange,\n                  value: values.lastName,\n                  InputProps: {\n                    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"start\",\n                      children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 25\n                    }, this)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 5,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  style: style.textFiedStyle,\n                  fullWidth: true,\n                  required: true,\n                  placeholder: \"Date of Birth *\",\n                  type: type,\n                  id: \"outlined-required\",\n                  variant: \"standard\",\n                  name: \"dob\",\n                  helperText: touched.dob && errors.dob,\n                  error: touched.dob && !!errors.dob,\n                  onChange: handleChange,\n                  value: values.dob,\n                  InputProps: {\n                    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"start\",\n                      children: /*#__PURE__*/_jsxDEV(CakeOutlined, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 262,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 25\n                    }, this)\n                  },\n                  onFocus: () => setType(\"date\"),\n                  onBlur: () => setType(\"text\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 5,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  style: style.textFiedStyle,\n                  fullWidth: true,\n                  required: true,\n                  placeholder: \"Contact Language *\",\n                  id: \"outlined-required\",\n                  variant: \"standard\",\n                  name: \"language\",\n                  helperText: touched.language && errors.language,\n                  error: touched.language && !!errors.language,\n                  onChange: handleChange,\n                  value: values.language,\n                  InputProps: {\n                    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"start\",\n                      children: /*#__PURE__*/_jsxDEV(TranslateOutlined, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 287,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 25\n                    }, this)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 5,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  style: style.textFiedStyle,\n                  fullWidth: true,\n                  required: true,\n                  placeholder: \"Phone *\",\n                  id: \"outlined-required\",\n                  variant: \"standard\",\n                  name: \"phone\",\n                  helperText: touched.phone && errors.phone,\n                  error: touched.phone && !!errors.phone,\n                  onChange: handleChange,\n                  value: values.phone,\n                  InputProps: {\n                    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"start\",\n                      children: /*#__PURE__*/_jsxDEV(Phone, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 312,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 311,\n                      columnNumber: 25\n                    }, this)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 5,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  style: style.textFiedStyle,\n                  fullWidth: true,\n                  required: true,\n                  placeholder: \"Email *\",\n                  id: \"outlined-required\",\n                  variant: \"standard\",\n                  name: \"email\",\n                  helperText: touched.email && errors.email,\n                  error: touched.email && !!errors.email,\n                  onChange: handleChange,\n                  value: values.email,\n                  InputProps: {\n                    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"start\",\n                      children: /*#__PURE__*/_jsxDEV(Email, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 335,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 25\n                    }, this)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 11,\n                children: /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n                  value: address,\n                  onChange: handleChanger,\n                  onSelect: handleSelect,\n                  children: _ref2 => {\n                    let {\n                      getInputProps,\n                      suggestions,\n                      getSuggestionItemProps,\n                      loading\n                    } = _ref2;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(TextField, {\n                        fstyle: style.textFiedStyle,\n                        fullWidth: true,\n                        required: true,\n                        id: \"outlined-required\",\n                        placeholder: \"Address *\",\n                        variant: \"standard\",\n                        name: \"address\",\n                        helperText: touched.address && errors.address,\n                        error: touched.address && !!errors.address,\n                        onChange: handleChange,\n                        value: address || values.address,\n                        style: style.textFiedStyle,\n                        ...getInputProps({\n                          className: \"location-search-input\"\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 367,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"autocomplete-dropdown-container\",\n                        children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: \"Loading...\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 385,\n                          columnNumber: 39\n                        }, this), suggestions.map((suggestion, i) => {\n                          const className = suggestion.active ? \"suggestion-item--active\" : \"suggestion-item\"; // inline style for demonstration purpose\n\n                          const style = suggestion.active ? {\n                            backgroundColor: \"#fafafa\",\n                            cursor: \"pointer\"\n                          } : {\n                            backgroundColor: \"#ffffff\",\n                            cursor: \"pointer\"\n                          };\n                          return /*#__PURE__*/_createElement(\"div\", { ...getSuggestionItemProps(suggestion, {\n                              className,\n                              style\n                            }),\n                            key: i,\n                            __self: this,\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 401,\n                              columnNumber: 31\n                            }\n                          }, /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              backgroundColor: \"white\",\n                              padding: \"10px\",\n                              boxShadow: \"2px 2px 2px 2px grey\"\n                            },\n                            children: /*#__PURE__*/_jsxDEV(\"span\", {\n                              style: {\n                                backgroundColor: \"white\"\n                              },\n                              children: suggestion.description\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 415,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 408,\n                            columnNumber: 33\n                          }, this));\n                        })]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 384,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 366,\n                      columnNumber: 23\n                    }, this);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 11,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  style: style.textFiedStyle,\n                  fullWidth: true,\n                  required: true,\n                  id: \"outlined-required\",\n                  placeholder: \"Notes/Reason\",\n                  variant: \"standard\",\n                  name: \"notes\",\n                  onChange: handleChange,\n                  value: values.notes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), referrals.length < 5 ? /*#__PURE__*/_jsxDEV(Grid, {\n            style: {\n              width: \"fit-content\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                color: \"black\"\n              },\n              variant: \"text\",\n              type: \"submit\",\n              startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 30\n              }, this),\n              children: \"ADD ANOTHER PATIENT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n            align: \"center\",\n            style: {\n              marginTop: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                borderRadius: \"10px\",\n                backgroundColor: \"#0B2B5B\",\n                width: \"100%\",\n                color: \"white\"\n              },\n              onClick: sendReferrals,\n              children: \"SEND REFERRALS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      style: {\n        backgroundColor: \"#25A575\"\n      },\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      open: open,\n      onClose: handleClose,\n      message: message,\n      autoHideDuration: 6000 // eslint-disable-next-line\n      ,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleClose,\n        severity: alertColor,\n        sx: {\n          width: \"100%\"\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this)\n    }, \"top\" + \"center\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Form, \"yd9dZ2X8+Yt3qR/Xr0H3nP7NlkQ=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["Alert","Button","Grid","InputAdornment","Snackbar","TextField","Formik","React","useState","AccountCircle","Add","CakeOutlined","Email","Phone","TranslateOutlined","yup","API","PlacesAutocomplete","geocodeByAddress","geocodeByPlaceId","getLatLng","style","textFiedStyle","marginTop","Form","colors","validationSchema","object","firstName","string","required","lastName","dob","language","phone","number","moreThan","typeError","email","address","max","notes","referrals","setReferrals","type","setType","open","setOpen","message","setMessage","alertColor","setAlertColor","setAddress","initialValues","sendReferrals","length","post","then","response","status","data","catch","error","handleClose","handleChanger","handleSelect","results","latLng","console","log","map","row","i","marginBottom","backgroundColor","height","paddingTop","paddingLeft","values","actions","oldData","resetForm","errors","handleChange","handleSubmit","touched","paddingBottom","marginLeft","startAdornment","getInputProps","suggestions","getSuggestionItemProps","loading","className","suggestion","active","cursor","padding","boxShadow","description","width","color","borderRadius","vertical","horizontal"],"sources":["/home/lenovo/Documents/interview/git gogo/git gogo2/patient-ref-form/src/components/Form.js"],"sourcesContent":["import {\n  Alert,\n  Button,\n  Grid,\n  InputAdornment,\n  Snackbar,\n  TextField,\n} from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport React, { useState } from \"react\";\nimport {\n  AccountCircle,\n  Add,\n  CakeOutlined,\n  Email,\n  Phone,\n  TranslateOutlined,\n} from \"@mui/icons-material\";\nimport * as yup from \"yup\";\nimport API from \"../utils/axios\";\nimport PlacesAutocomplete from \"react-places-autocomplete\";\nimport {\n  geocodeByAddress,\n  geocodeByPlaceId,\n  getLatLng,\n} from \"react-places-autocomplete\";\n\nconst style = {\n  textFiedStyle: {\n    marginTop: \"15px\",\n  },\n};\nexport default function Form() {\n  const colors = [\"#25A575\", \"#25A575\", \"#2595A5\", \"#3A719B\", \"#142B58\"];\n  const validationSchema = yup.object({\n    firstName: yup.string().required(\"first name is required\"),\n    lastName: yup.string().required(\"last name is required\"),\n    dob: yup.string().required(\"date of birth is required\"),\n    language: yup.string().required(\"contact language is required\"),\n    phone: yup\n      .number()\n      .moreThan(999999999, \"10 digits required\")\n      .typeError(\"numbers are allowed\")\n      .required(\"Mobile is required\"),\n    email: yup\n      .string()\n      .email(\"Enter a valid email\")\n      .required(\"email is required\"),\n    address: yup.string().max(100).required(\"address is required\"),\n    notes: yup.string().max(100),\n  });\n  const [referrals, setReferrals] = useState([]);\n  const [type, setType] = useState(\"text\");\n  const [open, setOpen] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [alertColor, setAlertColor] = useState(\"success\");\n  const [address, setAddress] = useState(\"\");\n\n  const initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    dob: \"\",\n    language: \"\",\n    phone: \"\",\n    email: \"\",\n    address: address,\n    notes: \"\",\n  };\n\n  const sendReferrals = () => {\n    if (referrals && referrals.length !== 0) {\n      API.post(`/patient`, referrals)\n        .then((response) => {\n          const { status, message } = response.data;\n          if (status) {\n            setAlertColor(\"success\");\n            setMessage(\n              `Success! You have submitted ${referrals.length} pending requests. You will be notified once they've been approved`\n            );\n            setOpen(true);\n          } else {\n            setMessage(message);\n            setAlertColor(\"error\");\n            setOpen(true);\n          }\n        })\n        .catch((error) => {\n          setMessage(error.message);\n          setAlertColor(\"error\");\n          setOpen(true);\n        });\n    }\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChanger = (address) => {\n    setAddress(address);\n  };\n\n  const handleSelect = (address) => {\n    setAddress(address);\n    initialValues.address = address;\n    geocodeByAddress(address)\n      .then((results) => getLatLng(results[0]))\n      .then((latLng) => console.log(\"Success\", latLng))\n      .catch((error) => console.error(\"Error\", error));\n  };\n\n  return (\n    <>\n      {referrals &&\n        referrals.map((row, i) => {\n          return (\n            <Grid style={{ marginBottom: \"10px\" }} key={i}>\n              <Grid style={{ backgroundColor: \"white\" }}>\n                <Grid container>\n                  <Grid item xs={12}>\n                    <Grid container style={{ height: \"5vh\" }}>\n                      <Grid\n                        item\n                        xs={1}\n                        style={{\n                          backgroundColor: colors[i],\n                          paddingTop: \"10px\",\n                        }}\n                      >\n                        {i + 1}\n                      </Grid>\n                      <Grid\n                        item\n                        xs={11}\n                        align=\"left\"\n                        style={{ paddingTop: \"10px\", paddingLeft: \"5px\" }}\n                      >\n                        {row.firstName + \"\" + row.lastName}\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          );\n        })}\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(values, actions) => {\n          setReferrals((oldData) => [...oldData, values]);\n          actions.resetForm({\n            firstName: \"\",\n            lastName: \"\",\n            dob: \"\",\n            language: \"\",\n            phone: \"\",\n            email: \"\",\n            address: \"\",\n            notes: \"\",\n          });\n          // setAddress(null);\n          // console.log('works');\n        }}\n      >\n        {({ errors, handleChange, handleSubmit, values, touched }) => (\n          <form\n            noValidate\n            onSubmit={handleSubmit}\n            style={{ marginTop: \"20px\" }}\n          >\n            <Grid style={{ backgroundColor: \"white\", paddingBottom: \"20px\" }}>\n              <Grid container>\n                <Grid item xs={12}>\n                  <Grid container style={{ height: \"5vh\" }}>\n                    <Grid\n                      item\n                      xs={1}\n                      style={{\n                        backgroundColor: colors[referrals.length + 1],\n                        paddingTop: \"10px\",\n                      }}\n                    >\n                      {referrals.length + 1}\n                    </Grid>\n                    <Grid\n                      item\n                      xs={11}\n                      align=\"left\"\n                      style={{ paddingTop: \"10px\", paddingLeft: \"5px\" }}\n                    >\n                      New Referral\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid container item style={{ marginLeft: \"20px\" }}>\n                <Grid item xs={5}>\n                  <TextField\n                    style={style.textFiedStyle}\n                    fullWidth\n                    required\n                    placeholder=\"First Name *\"\n                    id=\"outlined-required\"\n                    variant=\"standard\"\n                    name=\"firstName\"\n                    helperText={touched.firstName && errors.firstName}\n                    error={touched.firstName && !!errors.firstName}\n                    onChange={handleChange}\n                    value={values.firstName}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <AccountCircle />\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={1} />\n                <Grid item xs={5}>\n                  <TextField\n                    style={style.textFiedStyle}\n                    fullWidth\n                    required\n                    placeholder=\"Last Name *\"\n                    id=\"outlined-required\"\n                    variant=\"standard\"\n                    name=\"lastName\"\n                    helperText={touched.lastName && errors.lastName}\n                    error={touched.lastName && !!errors.lastName}\n                    onChange={handleChange}\n                    value={values.lastName}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <AccountCircle />\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </Grid>\n\n                {/* second row */}\n\n                <Grid item xs={5}>\n                  <TextField\n                    style={style.textFiedStyle}\n                    fullWidth\n                    required\n                    placeholder=\"Date of Birth *\"\n                    type={type}\n                    id=\"outlined-required\"\n                    variant=\"standard\"\n                    name=\"dob\"\n                    helperText={touched.dob && errors.dob}\n                    error={touched.dob && !!errors.dob}\n                    onChange={handleChange}\n                    value={values.dob}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <CakeOutlined />\n                        </InputAdornment>\n                      ),\n                    }}\n                    onFocus={() => setType(\"date\")}\n                    onBlur={() => setType(\"text\")}\n                  />\n                </Grid>\n                <Grid item xs={1} />\n                <Grid item xs={5}>\n                  <TextField\n                    style={style.textFiedStyle}\n                    fullWidth\n                    required\n                    placeholder=\"Contact Language *\"\n                    id=\"outlined-required\"\n                    variant=\"standard\"\n                    name=\"language\"\n                    helperText={touched.language && errors.language}\n                    error={touched.language && !!errors.language}\n                    onChange={handleChange}\n                    value={values.language}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <TranslateOutlined />\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </Grid>\n\n                {/* third row */}\n\n                <Grid item xs={5}>\n                  <TextField\n                    style={style.textFiedStyle}\n                    fullWidth\n                    required\n                    placeholder=\"Phone *\"\n                    id=\"outlined-required\"\n                    variant=\"standard\"\n                    name=\"phone\"\n                    helperText={touched.phone && errors.phone}\n                    error={touched.phone && !!errors.phone}\n                    onChange={handleChange}\n                    value={values.phone}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <Phone />\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={1} />\n                <Grid item xs={5}>\n                  <TextField\n                    style={style.textFiedStyle}\n                    fullWidth\n                    required\n                    placeholder=\"Email *\"\n                    id=\"outlined-required\"\n                    variant=\"standard\"\n                    name=\"email\"\n                    helperText={touched.email && errors.email}\n                    error={touched.email && !!errors.email}\n                    onChange={handleChange}\n                    value={values.email}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <Email />\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={11}>\n                  {/* <TextField\n                    style={style.textFiedStyle}\n                    fullWidth\n                    required\n                    id=\"outlined-required\"\n                    placeholder=\"Address *\"\n                    variant=\"standard\"\n                    name=\"address\"\n                    helperText={touched.address && errors.address}\n                    error={touched.address && !!errors.address}\n                    onChange={handleChange}\n                    value={values.address}\n                  /> */}\n                  <PlacesAutocomplete\n                    value={address}\n                    onChange={handleChanger}\n                    onSelect={handleSelect}\n                  >\n                    {({\n                      getInputProps,\n                      suggestions,\n                      getSuggestionItemProps,\n                      loading,\n                    }) => (\n                      <div>\n                        <TextField\n                          fstyle={style.textFiedStyle}\n                          fullWidth\n                          required\n                          id=\"outlined-required\"\n                          placeholder=\"Address *\"\n                          variant=\"standard\"\n                          name=\"address\"\n                          helperText={touched.address && errors.address}\n                          error={touched.address && !!errors.address}\n                          onChange={handleChange}\n                          value={address||values.address}\n                          style={style.textFiedStyle}\n                          {...getInputProps({\n                            className: \"location-search-input\",\n                          })}\n                        />\n                        <div className=\"autocomplete-dropdown-container\">\n                          {loading && <div>Loading...</div>}\n                          {suggestions.map((suggestion, i) => {\n                            const className = suggestion.active\n                              ? \"suggestion-item--active\"\n                              : \"suggestion-item\";\n                            // inline style for demonstration purpose\n                            const style = suggestion.active\n                              ? {\n                                  backgroundColor: \"#fafafa\",\n                                  cursor: \"pointer\",\n                                }\n                              : {\n                                  backgroundColor: \"#ffffff\",\n                                  cursor: \"pointer\",\n                                };\n                            return (\n                              <div\n                                {...getSuggestionItemProps(suggestion, {\n                                  className,\n                                  style,\n                                })}\n                                key={i}\n                              >\n                                <div\n                                  style={{\n                                    backgroundColor: \"white\",\n                                    padding: \"10px\",\n                                    boxShadow: \"2px 2px 2px 2px grey\",\n                                  }}\n                                >\n                                  <span style={{ backgroundColor: \"white\" }}>\n                                    {suggestion.description}\n                                  </span>\n                                </div>\n                              </div>\n                            );\n                          })}\n                        </div>\n                      </div>\n                    )}\n                  </PlacesAutocomplete>\n                </Grid>\n                <Grid item xs={11}>\n                  <TextField\n                    style={style.textFiedStyle}\n                    fullWidth\n                    required\n                    id=\"outlined-required\"\n                    placeholder=\"Notes/Reason\"\n                    variant=\"standard\"\n                    name=\"notes\"\n                    onChange={handleChange}\n                    value={values.notes}\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n            {referrals.length < 5 ? (\n              <Grid\n                style={{\n                  width: \"fit-content\",\n                }}\n              >\n                <Button\n                  style={{\n                    color: \"black\",\n                  }}\n                  variant=\"text\"\n                  type=\"submit\"\n                  startIcon={<Add />}\n                >\n                  ADD ANOTHER PATIENT\n                </Button>\n              </Grid>\n            ) : null}\n            <Grid align=\"center\" style={{ marginTop: \"20px\" }}>\n              <Button\n                style={{\n                  borderRadius: \"10px\",\n                  backgroundColor: \"#0B2B5B\",\n                  width: \"100%\",\n                  color: \"white\",\n                }}\n                onClick={sendReferrals}\n              >\n                SEND REFERRALS\n              </Button>\n            </Grid>\n          </form>\n        )}\n      </Formik>\n      <Snackbar\n        style={{ backgroundColor: \"#25A575\" }}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={open}\n        onClose={handleClose}\n        message={message}\n        autoHideDuration={6000}\n        // eslint-disable-next-line\n        key={\"top\" + \"center\"}\n      >\n        <Alert\n          onClose={handleClose}\n          severity={alertColor}\n          sx={{ width: \"100%\" }}\n        >\n          {message}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}